# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: htytask
          POSTGRES_PASSWORD: htytask
          POSTGRES_DB: htytask
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build With Maven
        run: |
          mvn \
          -DAUTH_CHECKING='false' \
          -DDBNAME="htytask" \
          -DDBPASS='htytask' \
          -DDBURL='localhost:5432' \
          -DDBUSER='htytask' \
          -DDDL='create-drop' \
          -DEXP_DAYS='1' \
          -DHALT_ON_ERROR='true' \
          -DAI_URL='xxx' \
          -DHTYUC_URL='xxx' \
          -DHTYWS_URL='xxx' \
          -DNGX_URL='xxx' \
          -DPRIV_KEY='xxx' \
          -DPUB_KEY='xxx' \
          -DREDIS_HOST='localhost:6379' \
          -DSYS_LOG_LEVEL='INFO' \
          -DTOKEN_VERIFY='false' \
          -DTS_DOMAIN='localhost' \
          -DTS_LOG_LEVEL='DEBUG' \
          -DTS_URL='http://localhost:8080' \
          -DUPYUN_BUCKET='moicen' \
          -DUPYUN_CDN='https://upyun.dev.moicen.com/music-room/' \
          -DUPYUN_DIR='music-room' \
          -DUPYUN_OPERATOR='${{ secrets.UPYUN_OPERATOR }}' \
          -DUPYUN_PASSWORD='${{ secrets.UPYUN_PASSWORD }}' \
          -DUPYUN_URL='https://v0.api.upyun.com' \
          -DWAIT_SEC='3' \
          -DZOMBIE_MIN='2' \
          -B install -DskipTests -fae --file pom.xml
